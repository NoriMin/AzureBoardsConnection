
#Your build pipeline references an undefined variable named ‘Parameters.RestoreBuildProjects’. Create or edit the build pipeline for this YAML file, define the variable on the Variables tab. See https://go.microsoft.com/fwlink/?linkid=865972
#Your build pipeline references an undefined variable named ‘Parameters.RestoreBuildProjects’. Create or edit the build pipeline for this YAML file, define the variable on the Variables tab. See https://go.microsoft.com/fwlink/?linkid=865972
#Your build pipeline references the ‘BuildConfiguration’ variable, which you’ve selected to be settable at queue time. Create or edit the build pipeline for this YAML file, define the variable on the Variables tab, and then select the option to make it settable at queue time. See https://go.microsoft.com/fwlink/?linkid=865971
#Your build pipeline references the ‘BuildConfiguration’ variable, which you’ve selected to be settable at queue time. Create or edit the build pipeline for this YAML file, define the variable on the Variables tab, and then select the option to make it settable at queue time. See https://go.microsoft.com/fwlink/?linkid=865971

stages:
- stage: Build
  displayname: Build stage
  jobs:
  - job: Build
    displayName: Build job
    pool:
      name: Hosted VS2017
    steps:
    - task: DotNetCoreCLI@2
      displayName: Restore
      inputs:
        command: restore
        projects: '$(Parameters.RestoreBuildProjects)'

    - task: DotNetCoreCLI@2
      displayName: Build
      inputs:
        projects: '$(Parameters.RestoreBuildProjects)'
        arguments: '--configuration $(BuildConfiguration)'

    - task: DotNetCoreCLI@2
      displayName: Publish
      inputs:
        command: publish
        publishWebProjects: True
        arguments: '--configuration $(BuildConfiguration) --output $(build.artifactstagingdirectory)'
        zipAfterPublish: True

    - task: PublishBuildArtifacts@1
      displayName: 'Publish Artifact'
      inputs:
        PathtoPublish: '$(build.artifactstagingdirectory)'
      condition: succeededOrFailed()

- stage: Deploy
  displayname: Staging
  dependsOn: Build
  jobs:
  - deployment: Deploy
    displayName: Staging Deploy
    pool:
      name: Hosted VS2017
    steps:
    - task: AzureRmWebAppDeployment@4
      displayName: 'Deploy Azure App Service'
      inputs:
        azureSubscription: '$(Parameters.ConnectedServiceName)'
        appType: '$(Parameters.WebAppKind)'
        WebAppName: '$(Parameters.WebAppName)'
        deployToSlotOrASE: true
        ResourceGroupName: 'mySignalR-RG'
        SlotName: Staging
        packageForLinux: '$(System.DefaultWorkingDirectory)/_GitHubConnectionDemo-ASP.NET Core-CI (1)/drop/s.zip'

- stage: Deploy
  displayname: Production
  dependsOn: Build
  jobs:
  - deployment: Deploy
    displayName: Production Deploy
    pool:
      name: Hosted VS2017
    steps:
  - task: AzureRmWebAppDeployment@4
    displayName: 'Deploy Azure App Service'
    inputs:
      azureSubscription: '$(Parameters.ConnectedServiceName)'
      appType: '$(Parameters.WebAppKind)'
      WebAppName: '$(Parameters.WebAppName)'
      packageForLinux: '$(System.DefaultWorkingDirectory)/_GitHubConnectionDemo-ASP.NET Core-CI (1)/drop/s.zip'

